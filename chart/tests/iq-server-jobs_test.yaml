suite: iq-server-service
templates:
  - iq-server-jobs.yaml
tests:
  - it: renders with defaults
    set:
      iq_server:
        tag: "1.148.0"   # force version tag so tests do not have to be updated every time we update IQ server version
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Job
        documentIndex: 0
      - equal:
          path: apiVersion
          value: batch/v1
        documentIndex: 0
      - equal:
          path: metadata.name
          value: RELEASE-NAME-migrate-db
        documentIndex: 0
      - isNull:
          path: metadata.annotations
        documentIndex: 0
      - equal:
          path: spec
          value:
            completions: 1
            parallelism: 1
            ttlSecondsAfterFinished: 0
            template:
              spec:
                containers:
                  - command:
                      - /bin/sh
                      - -c
                      - /opt/sonatype/nexus-iq-server/bin/nexus-iq-server migrate-db /etc/nexus-iq-server/config.yml
                    env:
                    - name: NXIQ_DATABASE_HOSTNAME
                      valueFrom:
                        secretKeyRef:
                          key: hostname
                          name: RELEASE-NAME-iq-server-database-hostname-secret
                    - name: NXIQ_DATABASE_PORT
                      valueFrom:
                        secretKeyRef:
                          key: port
                          name: RELEASE-NAME-iq-server-database-port-secret
                    - name: NXIQ_DATABASE_NAME
                      valueFrom:
                        secretKeyRef:
                          key: name
                          name: RELEASE-NAME-iq-server-database-name-secret
                    - name: NXIQ_DATABASE_USERNAME
                      valueFrom:
                        secretKeyRef:
                          key: username
                          name: RELEASE-NAME-iq-server-database-username-secret
                    - name: NXIQ_DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: password
                          name: RELEASE-NAME-iq-server-database-password-secret
                    image: sonatype/nexus-iq-server:1.148.0
                    imagePullPolicy: IfNotPresent
                    name: RELEASE-NAME-iq-server-container
                    resources:
                      limits:
                      requests:
                    securityContext:
                      runAsGroup: 1000
                      runAsUser: 1000
                    volumeMounts:
                      - mountPath: /etc/nexus-iq-server
                        name: RELEASE-NAME-iq-server-pod-config-volume
                restartPolicy: OnFailure
                serviceAccountName: default
                volumes:
                  - configMap:
                      items:
                        - key: config
                          path: config.yml
                      name: RELEASE-NAME-iq-server-config-configmap
                    name: RELEASE-NAME-iq-server-pod-config-volume
        documentIndex: 0

  - it: renders with overridden values
    set:
      iq_server:
        serviceAccountName: "my-service-account"
        imageRegistry: "docker-all.repo.sonatype.com"
        image: "iq/snapshot"
        imagePullPolicy: "Always"
        tag: "1.142.0-SNAPSHOT"
      iq_server_jobs:
        migrationJobAnnotations:
          "test_key_1": test_value_1
          "test_key_2": test_value_2
        resources:
          requests:
            cpu: 2
            memory: "500M"
          limits:
            cpu: 4
            memory: "1Gi"
        env:
          - name: ENV_VAR_1
            value: value1
          - name: ENV_VAR_2
            valueFrom:
              secretKeyRef:
                key: secret-key
                name: my-secret
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Job
        documentIndex: 0
      - equal:
          path: apiVersion
          value: batch/v1
        documentIndex: 0
      - equal:
          path: metadata.name
          value: RELEASE-NAME-migrate-db
        documentIndex: 0
      - equal:
          path: metadata.annotations
          value:
            "test_key_1": test_value_1
            "test_key_2": test_value_2
      - equal:
          path: spec
          value:
            completions: 1
            parallelism: 1
            ttlSecondsAfterFinished: 0
            template:
              spec:
                containers:
                  - command:
                    - /bin/sh
                    - -c
                    - /opt/sonatype/nexus-iq-server/bin/nexus-iq-server migrate-db /etc/nexus-iq-server/config.yml
                    env:
                    - name: ENV_VAR_1
                      value: value1
                    - name: ENV_VAR_2
                      valueFrom:
                        secretKeyRef:
                          key: secret-key
                          name: my-secret
                    - name: NXIQ_DATABASE_HOSTNAME
                      valueFrom:
                        secretKeyRef:
                          key: hostname
                          name: RELEASE-NAME-iq-server-database-hostname-secret
                    - name: NXIQ_DATABASE_PORT
                      valueFrom:
                        secretKeyRef:
                          key: port
                          name: RELEASE-NAME-iq-server-database-port-secret
                    - name: NXIQ_DATABASE_NAME
                      valueFrom:
                        secretKeyRef:
                          key: name
                          name: RELEASE-NAME-iq-server-database-name-secret
                    - name: NXIQ_DATABASE_USERNAME
                      valueFrom:
                        secretKeyRef:
                          key: username
                          name: RELEASE-NAME-iq-server-database-username-secret
                    - name: NXIQ_DATABASE_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: password
                          name: RELEASE-NAME-iq-server-database-password-secret
                    image: docker-all.repo.sonatype.com/iq/snapshot:1.142.0-SNAPSHOT
                    imagePullPolicy: Always
                    name: RELEASE-NAME-iq-server-container
                    resources:
                      limits:
                        cpu: 4
                        memory: 1Gi
                      requests:
                        cpu: 2
                        memory: 500M
                    securityContext:
                      runAsGroup: 1000
                      runAsUser: 1000
                    volumeMounts:
                    - mountPath: /etc/nexus-iq-server
                      name: RELEASE-NAME-iq-server-pod-config-volume
                restartPolicy: OnFailure
                serviceAccountName: my-service-account
                volumes:
                - configMap:
                    items:
                    - key: config
                      path: config.yml
                    name: RELEASE-NAME-iq-server-config-configmap
                  name: RELEASE-NAME-iq-server-pod-config-volume
        documentIndex: 0

  - it: renders iq version tag correctly by default
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: sonatype/nexus-iq-server:\d+\.\d+\.\d+
        documentIndex: 0

  - it: can set aws rds secrets
    set:
      secret:
        rds:
          arn: "arn:aws:abc/xyz"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NXIQ_DATABASE_HOSTNAME
            valueFrom:
              secretKeyRef:
                key: hostname
                name: RELEASE-NAME-aws-rds-secret
        documentIndex: 0
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NXIQ_DATABASE_PORT
            valueFrom:
              secretKeyRef:
                key: port
                name: RELEASE-NAME-aws-rds-secret
        documentIndex: 0
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NXIQ_DATABASE_NAME
            valueFrom:
              secretKeyRef:
                key: name
                name: RELEASE-NAME-aws-rds-secret
        documentIndex: 0
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NXIQ_DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: RELEASE-NAME-aws-rds-secret
        documentIndex: 0
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: NXIQ_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: RELEASE-NAME-aws-rds-secret
        documentIndex: 0
      - contains:
          path: spec.template.spec.containers[0].volumeMounts
          content:
            mountPath: /iq-secrets
            name: RELEASE-NAME-iq-server-secrets-volume
        documentIndex: 0
      - contains:
          path: spec.template.spec.volumes
          content:
            csi:
              driver: secrets-store.csi.k8s.io
              readOnly: true
              volumeAttributes:
                fsType: ext4
                secretProviderClass: RELEASE-NAME-aws-secret-provider
            name: RELEASE-NAME-iq-server-secrets-volume
        documentIndex: 0

  - it: can create git ssh job for generating ssh keys and known hosts files
    set:
      iq_server:
        imageRegistry: "docker-all.repo.sonatype.com"
        image: "iq/snapshot"
        tag: "1.142.0-SNAPSHOT"
        useGitSsh: true
    asserts:
      - hasDocuments:
          count: 2
      - isKind:
          of: Job
        documentIndex: 1
      - equal:
          path: apiVersion
          value: batch/v1
        documentIndex: 1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-git-ssh
        documentIndex: 1
      - equal:
          path: spec
          value:
            completions: 1
            parallelism: 1
            ttlSecondsAfterFinished: 0
            template:
              spec:
                containers:
                  - command:
                      - /bin/sh
                      - -c
                      - |
                        test -f /sonatype-work/clm-cluster/.ssh/known_hosts ||
                        (ssh-keyscan github.com gitlab.com bitbucket.org ssh.dev.azure.com >/sonatype-work/clm-cluster/.ssh/known_hosts) &&
                        test -f /sonatype-work/clm-cluster/.ssh/id_rsa ||
                        (yes n | ssh-keygen -q -t rsa -N '' -f /sonatype-work/clm-cluster/.ssh/id_rsa &&
                        chmod 600 /sonatype-work/clm-cluster/.ssh/id_rsa)
                    image: docker-all.repo.sonatype.com/iq/snapshot:1.142.0-SNAPSHOT
                    imagePullPolicy: IfNotPresent
                    name: RELEASE-NAME-git-ssh-container
                    volumeMounts:
                      - mountPath: /sonatype-work/clm-cluster
                        name: RELEASE-NAME-iq-server-pod-volume
                    securityContext:
                      runAsGroup: 1000
                      runAsUser: 1000
                restartPolicy: OnFailure
                serviceAccountName: default
                volumes:
                  - name: RELEASE-NAME-iq-server-pod-volume
                    persistentVolumeClaim:
                      claimName: iq-server-pvc
        documentIndex: 1

  - it: can create git ssh job with passed in ssh private key and known hosts files
    set:
      iq_server:
        imageRegistry: "docker-all.repo.sonatype.com"
        image: "iq/snapshot"
        tag: "1.142.0-SNAPSHOT"
        useGitSsh: true
        sshPrivateKey: "/private.key"
        sshKnownHosts: "/known_hosts"
    asserts:
      - hasDocuments:
          count: 2
      - isKind:
          of: Job
        documentIndex: 1
      - equal:
          path: apiVersion
          value: batch/v1
        documentIndex: 1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-git-ssh
        documentIndex: 1
      - equal:
          path: spec
          value:
            completions: 1
            parallelism: 1
            ttlSecondsAfterFinished: 0
            template:
              spec:
                containers:
                  - command:
                      - /bin/sh
                      - -c
                      - |
                        test -f /sonatype-work/clm-cluster/.ssh/known_hosts ||
                        (echo "              /known_hosts" >/sonatype-work/clm-cluster/.ssh/known_hosts &&
                        sed -i'' -e 's/^[ \t]*//g' /sonatype-work/clm-cluster/.ssh/known_hosts) &&
                        test -f /sonatype-work/clm-cluster/.ssh/id_rsa ||
                        (echo "              /private.key" >/sonatype-work/clm-cluster/.ssh/id_rsa &&
                        sed -i'' -e 's/^[ \t]*//g' /sonatype-work/clm-cluster/.ssh/id_rsa &&
                        chmod 600 /sonatype-work/clm-cluster/.ssh/id_rsa)
                    image: docker-all.repo.sonatype.com/iq/snapshot:1.142.0-SNAPSHOT
                    imagePullPolicy: IfNotPresent
                    name: RELEASE-NAME-git-ssh-container
                    volumeMounts:
                      - mountPath: /sonatype-work/clm-cluster
                        name: RELEASE-NAME-iq-server-pod-volume
                    securityContext:
                      runAsGroup: 1000
                      runAsUser: 1000
                restartPolicy: OnFailure
                serviceAccountName: default
                volumes:
                  - name: RELEASE-NAME-iq-server-pod-volume
                    persistentVolumeClaim:
                      claimName: iq-server-pvc
        documentIndex: 1

  - it: can create git ssh job with passed in aws ssh private key and known hosts files
    set:
      iq_server:
        imageRegistry: "docker-all.repo.sonatype.com"
        image: "iq/snapshot"
        tag: "1.142.0-SNAPSHOT"
        useGitSsh: true
      secret:
        sshPrivateKey:
          arn: "arnPK"
        sshKnownHosts:
          arn: "arnKH"
    asserts:
      - hasDocuments:
          count: 2
      - isKind:
          of: Job
        documentIndex: 1
      - equal:
          path: 'apiVersion'
          value: batch/v1
        documentIndex: 1
      - equal:
          path: metadata.name
          value: RELEASE-NAME-git-ssh
        documentIndex: 1
      - equal:
          path: spec
          value:
            completions: 1
            parallelism: 1
            ttlSecondsAfterFinished: 0
            template:
              spec:
                containers:
                  - command:
                      - /bin/sh
                      - -c
                      - |
                        test -f /sonatype-work/clm-cluster/.ssh/known_hosts ||
                        (cp /iq-secrets/known_hosts /sonatype-work/clm-cluster/.ssh/known_hosts) &&
                        test -f /sonatype-work/clm-cluster/.ssh/id_rsa ||
                        (cp /iq-secrets/id_rsa /sonatype-work/clm-cluster/.ssh/id_rsa &&
                        chmod 600 /sonatype-work/clm-cluster/.ssh/id_rsa)
                    image: docker-all.repo.sonatype.com/iq/snapshot:1.142.0-SNAPSHOT
                    imagePullPolicy: IfNotPresent
                    name: RELEASE-NAME-git-ssh-container
                    securityContext:
                      runAsGroup: 1000
                      runAsUser: 1000
                    volumeMounts:
                    - mountPath: /sonatype-work/clm-cluster
                      name: RELEASE-NAME-iq-server-pod-volume
                    - mountPath: /iq-secrets
                      name: RELEASE-NAME-iq-server-secrets-volume
                restartPolicy: OnFailure
                serviceAccountName: default
                volumes:
                - name: RELEASE-NAME-iq-server-pod-volume
                  persistentVolumeClaim:
                    claimName: iq-server-pvc
                - name: RELEASE-NAME-iq-server-secrets-volume
                  csi:
                    driver: secrets-store.csi.k8s.io
                    readOnly: true
                    volumeAttributes:
                      fsType: ext4
                      secretProviderClass: RELEASE-NAME-aws-secret-provider
        documentIndex: 1
